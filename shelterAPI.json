{
  "openapi": "3.0.1",
  "info": {
    "title": "ShelterAPI",
    "version": "v1"
  },
  "paths": {
    "/shelter": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Gets all shelters.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of requested page, indexed from 0. If null default value is assigned."
            }
          },
          {
            "name": "pageCount",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items to return. If null default value is assigned."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSheltersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - lack of mandatory query parameters."
          }
        }
      },
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Posts new shelter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostShelterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/shelter/{shelterId}": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Gets shelter by id.",
        "parameters": [
          {
            "name": "shelterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShelterDTO"
                }
              }
            }
          },
          "404": {
            "description": "Client error"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Updates shelter. Requires admin role.",
        "parameters": [
          {
            "name": "shelterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutShelterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetSheltersResponse": {
        "type": "object",
        "properties": {
          "shelters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShelterDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "description": "Number of returned page, indexed from 0."
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of all items in collection."
          }
        }
      },
      "ShelterDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "fullShelterName": {
            "type": "string",
            "nullable": true
          },
          "isAuthorized": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO"
          }
        },
        "additionalProperties": false
      },
      "AddressDTO": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostShelterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "fullShelterName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO"
          }
        },
        "additionalProperties": false
      },
      "PutShelterRequest": {
        "type": "object",
        "properties": {
          "isAuthorized": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}