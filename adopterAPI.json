{
  "openapi": "3.0.1",
  "info": {
    "title": "AdopterAPI",
    "version": "v1"
  },
  "paths": {
    "/adopter": {
      "get": {
        "tags": [
          "AdopterEndpoints"
        ],
        "summary": "Get all adopters. Requires admin role.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of requested page, indexed from 0. If null default value is assigned."
            }
          },
          {
            "name": "pageCount",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items to return. If null default value is assigned."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdoptersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Client error"
          }
        }
      },
      "post": {
        "tags": [
          "AdopterEndpoints"
        ],
        "summary": "Posts new adopter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostAdopterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    },
    "/adopter/{adopterId}": {
      "get": {
        "tags": [
          "AdopterEndpoints"
        ],
        "summary": "Get adopter by id. Requires admin role (any adopter) or adopter role (only matching id).",
        "parameters": [
          {
            "name": "adopterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdopterDTO"
                }
              }
            }
          },
          "401": {
            "description": "Client error"
          },
          "404": {
            "description": "Client error"
          }
        }
      },
      "put": {
        "tags": [
          "AdopterEndpoints"
        ],
        "summary": "Updates adopter. Requires admin role.",
        "parameters": [
          {
            "name": "adopterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutAdopterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    },
    "/adopter/{adopterId}/isVerified": {
      "get": {
        "tags": [
          "AdopterEndpoints"
        ],
        "summary": "Gets info if specified adopter is verified by shelter provided in token. Requires shelter role.",
        "parameters": [
          {
            "name": "adopterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    },
    "/adopter/{adopterId}/verify": {
      "put": {
        "tags": [
          "AdopterEndpoints"
        ],
        "summary": "Verifies adopter for shelter provided in token. Requires shelter role.",
        "parameters": [
          {
            "name": "adopterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Adopter already verified"
          },
          "401": {
            "description": "Client error"
          },
          "404": {
            "description": "Adopter doesn't exist"
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "ApplicationsEndpoints"
        ],
        "summary": "Gets all applications. Requires any role. For shelter, applications are filtered only for that shelter. For adopter, applications are filtered only for that adopter. Admin gets them all.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of requested page, indexed from 0. If null default value is assigned."
            }
          },
          {
            "name": "pageCount",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items to return. If null default value is assigned."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Client error"
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationsEndpoints"
        ],
        "summary": "Posts new application. Requires adopter role. Gets adopter ID from token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    },
    "/applications/{announcementId}": {
      "get": {
        "tags": [
          "ApplicationsEndpoints"
        ],
        "summary": "Gets application for specified announcement. Requires shelter role matching with announcement's shelter.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of requested page, indexed from 0. If null default value is assigned."
            }
          },
          {
            "name": "pageCount",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Number of items to return. If null default value is assigned."
            }
          },
          {
            "name": "announcementId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    },
    "/applications/{applicationId}/accept": {
      "put": {
        "tags": [
          "ApplicationsEndpoints"
        ],
        "summary": "Accepts application. Requires shelter role matching with shelterId of application.",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client error"
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    },
    "/applications/{applicationId}/reject": {
      "put": {
        "tags": [
          "ApplicationsEndpoints"
        ],
        "summary": "Rejects application. Requires shelter role matching with shelterId of application.",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client error"
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    },
    "/applications/{applicationId}/withdraw": {
      "put": {
        "tags": [
          "ApplicationsEndpoints"
        ],
        "summary": "Withdraws application. Requires adopter role matching with adopterId of application.",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client error"
          },
          "401": {
            "description": "Client error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAdoptersResponse": {
        "type": "object",
        "properties": {
          "adopters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdopterDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "description": "Number of returned page, indexed from 0."
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of all items in collection."
          }
        }
      },
      "GetApplicationsResponse": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "description": "Number of returned page, indexed from 0."
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of all items in collection."
          }
        }
      },
      "AddressDTO": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdopterDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/AdopterStatusDTO"
          }
        },
        "additionalProperties": false
      },
      "AdopterStatus": {
        "enum": [
          "Active",
          "Blocked",
          "Deleted"
        ],
        "type": "string"
      },
      "AdopterStatusDTO": {
        "enum": [
          "Active",
          "Blocked",
          "Deleted"
        ],
        "type": "string"
      },
      "AnnouncementDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "closingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/AnnouncementStatusDTO"
          },
          "pet": {
            "$ref": "#/components/schemas/PetDTO"
          }
        },
        "additionalProperties": false
      },
      "AnnouncementStatusDTO": {
        "enum": [
          "Open",
          "Closed",
          "DuringVerification",
          "Deleted"
        ],
        "type": "string"
      },
      "ApplicationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "announcementId": {
            "type": "string",
            "format": "uuid"
          },
          "announcement": {
            "$ref": "#/components/schemas/AnnouncementDTO"
          },
          "adopter": {
            "$ref": "#/components/schemas/AdopterDTO"
          },
          "applicationStatus": {
            "$ref": "#/components/schemas/ApplicationStatusDTO"
          }
        },
        "additionalProperties": false
      },
      "ApplicationStatusDTO": {
        "enum": [
          "Created",
          "Accepted",
          "Rejected",
          "Withdrawn",
          "Deleted"
        ],
        "type": "string"
      },
      "PetDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "shelter": {
            "$ref": "#/components/schemas/ShelterDTO"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "species": {
            "type": "string",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostAdopterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostApplicationRequest": {
        "type": "object",
        "properties": {
          "announcementId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PutAdopterRequest": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AdopterStatus"
          }
        },
        "additionalProperties": false
      },
      "ShelterDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "fullShelterName": {
            "type": "string",
            "nullable": true
          },
          "isAuthorized": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}